[{"severity":"convention","location":{"begin_pos":46,"end_pos":47},"message":"Layout/EmptyLines: Extra blank line detected.","cop_name":"Layout/EmptyLines","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":74,"end_pos":87},"message":"RSpec/Rails/InferredSpecType: Remove redundant spec type.","cop_name":"RSpec/Rails/InferredSpecType","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":517,"end_pos":545},"message":"Performance/StringInclude: Use `String#include?` instead of a regex match with literal-only pattern.","cop_name":"Performance/StringInclude","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":541,"end_pos":547},"message":"Style/StringLiterals: Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.","cop_name":"Style/StringLiterals","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":533,"end_pos":560},"message":"Performance/StringInclude: Use `String#include?` instead of a regex match with literal-only pattern.","cop_name":"Performance/StringInclude","status":"uncorrected"},{"severity":"warning","location":{"begin_pos":554,"end_pos":555},"message":"Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the `/` if it should be a division.","cop_name":"Lint/AmbiguousRegexpLiteral","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":620,"end_pos":627},"message":"Style/StringLiterals: Prefer double-quoted strings unless you need single quotes to avoid extra backslashes for escaping.","cop_name":"Style/StringLiterals","status":"uncorrected"},{"severity":"convention","location":{"begin_pos":608,"end_pos":636},"message":"Performance/StringInclude: Use `String#include?` instead of a regex match with literal-only pattern.","cop_name":"Performance/StringInclude","status":"uncorrected"},{"severity":"warning","location":{"begin_pos":629,"end_pos":630},"message":"Lint/AmbiguousRegexpLiteral: Ambiguous regexp literal. Parenthesize the method arguments if it's surely a regexp literal, or add a whitespace to the right of the `/` if it should be a division.","cop_name":"Lint/AmbiguousRegexpLiteral","status":"uncorrected"}]